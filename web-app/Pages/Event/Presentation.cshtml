@using BAL.Interfaces;
@using BAL.Models.Event
@using BAL.Services;
@model EventStartViewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor contextAccessor
@inject ISlideService slideService

@{
    Layout = "~/Pages/Shared/_EventLayout.cshtml";
    var isPresenterQuery = contextAccessor.HttpContext.Request.QueryString.ToString();
}

<div class="reveal" style="background-image:url('@string.Join("\\\\", Model.Presentation.Image.Split("\\"))')">
    <div class="slides">
        <section class="event-page container-fluid">
            <div class="row justify-content-center align-items-center">
                <div class="col-4 qr-code">
                    @await Html.PartialAsync("~/Pages/Shared/_QRCodePartial.cshtml", Model.QRCodeViewModel)
                </div>
                <div class="col-8 event-info">
                    <h1 class="display-1 text-light font-weight-bold">
                        @Model.Presentation.Name
                    </h1>
                </div>
                <div id="users-container" class="users-container">
                </div>
            </div>

        </section>

        @foreach (var slide in Model.Presentation.Slides)
        {
            <section>
                @if (slide.Type == "Title")
                {
                    <h1>
                        @slide.Title
                    </h1>
                    <p>
                        @slide.Text
                    </p>
                }

                @if (slide.Type == "Image")
                {
                    <img src="@slide.Image" alt="Slide Image" />
                    <p>
                        @slide.Text
                    </p>
                }

                @if (slide.Type == "Rating")
                {
                    for (int i = 1; i <= 5; i++)
                    {
                       <span class="starRatingEvent star_@i" data-starindex="@i">&#9733;</span>
                    }
                }
                @if (slide.Type == "WordCloud")
                {
                        <h1 id = "wordcloud-content">
                            @slide.Title
                        </h1>
                        <h3 id ="submitted-answers"></h3>
                        <h3 id="your-answer"></h3>
                    if (!isPresenterQuery.Contains("isPresenter"))
                    {
                        <p id="submitForm">
                            <input  type="text" id="submit_answer" maxlength="200" />
                            <button type="submit" id="answer-btn" style="width:150px">Ok</button>
                        </p>
                    }
                }
            </section>
        }
    </div>


</div>

<div class="reactions-container">
    <div id="reactions-list" class="reactions-list">
        <img id="like" src="~/images/reactions/like.png" alt="">
        <img id="wave" src="~/images/reactions/wave.png" alt="">
        <img id="love" src="~/images/reactions/love.png" alt="">
        <img id="clap" src="~/images/reactions/clap.png" alt="">
        <img id="laughter" src="~/images/reactions/laughter.png" alt="">
    </div>
    <img id="reactions-btn" class="reactions-btn" src="~/images/reactions/reaction.png" alt="">
</div>

<div id="reactions" class="reactions">
</div>

<script src="~/revealjs/dist/reveal.js"></script>
<script src="~/revealjs/plugin/notes/notes.js"></script>
<script src="~/revealjs/plugin/markdown/markdown.js"></script>
<script src="~/revealjs/plugin/highlight/highlight.js"></script>

<script>
    isPresenter = (@Model.IsPresenter.ToString().ToLower());
    var presentationId = @Model.Presentation.Id;
    var username = "@Model.Username";
    var image = `@string.Join("\\\\", Model.Image.Split("\\"))`;

    Reveal.initialize({
        hash: true,
        plugins: [RevealMarkdown, RevealHighlight, RevealNotes],
        controls: isPresenter,
        keyboard: isPresenter,
        touch: isPresenter,
    });
</script>

